# This file was auto-generated by Fern from our API Definition.

import typing

import httpx

from .core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .environment import FernIrEnvironment
from .resources.a.client import AClient, AsyncAClient
from .resources.b.client import AsyncBClient, BClient
from .resources.commons.client import AsyncCommonsClient, CommonsClient


class FernIr:
    def __init__(
        self, *, environment: FernIrEnvironment = FernIrEnvironment.PRODUCTION, timeout: typing.Optional[float] = 60
    ):
        self._client_wrapper = SyncClientWrapper(environment=environment, httpx_client=httpx.Client(timeout=timeout))
        self.a = AClient(client_wrapper=self._client_wrapper)
        self.b = BClient(client_wrapper=self._client_wrapper)
        self.commons = CommonsClient(client_wrapper=self._client_wrapper)


class AsyncFernIr:
    def __init__(
        self, *, environment: FernIrEnvironment = FernIrEnvironment.PRODUCTION, timeout: typing.Optional[float] = 60
    ):
        self._client_wrapper = AsyncClientWrapper(
            environment=environment, httpx_client=httpx.AsyncClient(timeout=timeout)
        )
        self.a = AsyncAClient(client_wrapper=self._client_wrapper)
        self.b = AsyncBClient(client_wrapper=self._client_wrapper)
        self.commons = AsyncCommonsClient(client_wrapper=self._client_wrapper)
