# This file was auto-generated by Fern from our API Definition.

import typing
import urllib

import httpx
import pydantic

from ....core.remove_none_from_headers import remove_none_from_headers
from ...commons.types.problem_id import ProblemId


class Client:
    def __init__(self, *, environment: str, x_random_header: typing.Optional[str]):
        self._environment = environment
        self.x_random_header = x_random_header

    def get_homepage_problems(self) -> typing.List[ProblemId]:
        _response = httpx.request(
            "GET",
            urllib.parse.urljoin(f"{self._environment}/", "homepage-problems"),
            headers=remove_none_from_headers({"X-Random-Header": self.x_random_header}),
        )
        return pydantic.parse_obj_as(typing.List[ProblemId], _response)  # type: ignore

    def set_homepage_problems(self, *, request: typing.List[ProblemId]) -> None:
        _response = httpx.request(
            "POST",
            urllib.parse.urljoin(f"{self._environment}/", "homepage-problems"),
            json=request,
            headers=remove_none_from_headers({"X-Random-Header": self.x_random_header}),
        )
