# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import typing_extensions

from ...commons.types.binary_tree_node_value import BinaryTreeNodeValue
from ...commons.types.binary_tree_value import BinaryTreeValue
from ...commons.types.doubly_linked_list_node_value import DoublyLinkedListNodeValue
from ...commons.types.doubly_linked_list_value import DoublyLinkedListValue
from ...commons.types.language import Language
from ...commons.types.node_id import NodeId
from ...commons.types.problem_id import ProblemId
from ...commons.types.singly_linked_list_node_value import SinglyLinkedListNodeValue
from ...commons.types.singly_linked_list_value import SinglyLinkedListValue
from ...v_2.resources.problem.types.test_case_id import TestCaseId
from .actual_result import ActualResult
from .building_executor_response import BuildingExecutorResponse
from .compile_error import CompileError
from .custom_test_cases_unsupported import CustomTestCasesUnsupported
from .error_info import ErrorInfo
from .errored_response import ErroredResponse
from .exception_info import ExceptionInfo
from .exception_v_2 import ExceptionV2
from .execution_session_status import ExecutionSessionStatus
from .finished_response import FinishedResponse
from .graded_response import GradedResponse
from .graded_response_v_2 import GradedResponseV2
from .initialize_problem_request import InitializeProblemRequest
from .internal_error import InternalError
from .invalid_request_cause import InvalidRequestCause
from .invalid_request_response import InvalidRequestResponse
from .lightweight_stackframe_information import LightweightStackframeInformation
from .recorded_response_notification import RecordedResponseNotification
from .recording_response_notification import RecordingResponseNotification
from .running_response import RunningResponse
from .running_submission_state import RunningSubmissionState
from .runtime_error import RuntimeError
from .stop_request import StopRequest
from .stopped_response import StoppedResponse
from .submission_file_info import SubmissionFileInfo
from .submission_id import SubmissionId
from .submission_id_not_found import SubmissionIdNotFound
from .submission_request import SubmissionRequest
from .submit_request_v_2 import SubmitRequestV2
from .test_case_grade import TestCaseGrade
from .test_case_hidden_grade import TestCaseHiddenGrade
from .test_case_non_hidden_grade import TestCaseNonHiddenGrade
from .test_case_result import TestCaseResult
from .test_case_result_with_stdout import TestCaseResultWithStdout
from .traced_file import TracedFile
from .unexpected_language_error import UnexpectedLanguageError
from .workspace_ran_response import WorkspaceRanResponse
from .workspace_run_details import WorkspaceRunDetails
from .workspace_submit_request import WorkspaceSubmitRequest


class CodeExecutionUpdate_BuildingExecutor(BuildingExecutorResponse):
    type: typing_extensions.Literal["buildingExecutor"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Running(RunningResponse):
    type: typing_extensions.Literal["running"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Errored(ErroredResponse):
    type: typing_extensions.Literal["errored"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Stopped(StoppedResponse):
    type: typing_extensions.Literal["stopped"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Graded(GradedResponse):
    type: typing_extensions.Literal["graded"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_GradedV2(GradedResponseV2):
    type: typing_extensions.Literal["gradedV2"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_WorkspaceRan(WorkspaceRanResponse):
    type: typing_extensions.Literal["workspaceRan"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Recording(RecordingResponseNotification):
    type: typing_extensions.Literal["recording"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Recorded(RecordedResponseNotification):
    type: typing_extensions.Literal["recorded"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_InvalidRequest(InvalidRequestResponse):
    type: typing_extensions.Literal["invalidRequest"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class CodeExecutionUpdate_Finished(FinishedResponse):
    type: typing_extensions.Literal["finished"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


CodeExecutionUpdate = typing.Union[
    CodeExecutionUpdate_BuildingExecutor,
    CodeExecutionUpdate_Running,
    CodeExecutionUpdate_Errored,
    CodeExecutionUpdate_Stopped,
    CodeExecutionUpdate_Graded,
    CodeExecutionUpdate_GradedV2,
    CodeExecutionUpdate_WorkspaceRan,
    CodeExecutionUpdate_Recording,
    CodeExecutionUpdate_Recorded,
    CodeExecutionUpdate_InvalidRequest,
    CodeExecutionUpdate_Finished,
]
from ...commons.types.key_value_pair import KeyValuePair  # noqa: E402
from ...commons.types.map_value import MapValue  # noqa: E402
from ...commons.types.variable_value import VariableValue  # noqa: E402
