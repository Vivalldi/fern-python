# This file was auto-generated by Fern from our API Definition.

import functools
import typing

import httpx

from ....core.api_error import ApiError
from ....core.remove_none_from_headers import remove_none_from_headers
from ..resources.problem.client.client import ProblemClient
from ..resources.v_3.client.client import V3Client


class V2Client:
    def __init__(
        self, *, environment: str, x_random_header: typing.Optional[str] = None, token: typing.Optional[str] = None
    ):
        self._environment = environment
        self.x_random_header = x_random_header
        self._token = token

    def test(self) -> None:
        _response = httpx.request(
            "GET",
            self._environment,
            headers=remove_none_from_headers(
                {
                    "X-Random-Header": self.x_random_header,
                    "Authorization": f"Bearer {self._token}" if self._token is not None else None,
                }
            ),
        )
        _response_json = _response.json()
        raise ApiError(status_code=_response.status_code, body=_response_json)

    @functools.cached_property
    def problem(self) -> ProblemClient:
        return ProblemClient(environment=self._environment, x_random_header=self.x_random_header, token=self._token)

    @functools.cached_property
    def v_3(self) -> V3Client:
        return V3Client(environment=self._environment, x_random_header=self.x_random_header, token=self._token)
