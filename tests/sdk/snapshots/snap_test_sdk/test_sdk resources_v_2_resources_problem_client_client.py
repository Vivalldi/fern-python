# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import requests

from .....commons.types.problem_id import ProblemId
from ..types.lightweight_problem_info_v_2 import LightweightProblemInfoV2
from ..types.problem_info_v_2 import ProblemInfoV2


class Client:
    def __init__(self, *, environment: str):
        ...

    def get_lightweight_problems(self) -> typing.List[LightweightProblemInfoV2]:
        _response = requests.request("GET", "")
        return pydantic.parse_obj_as(typing.List[LightweightProblemInfoV2], _response)  # type: ignore

    def get_problems(self) -> typing.List[ProblemInfoV2]:
        _response = requests.request("GET", "")
        return pydantic.parse_obj_as(typing.List[ProblemInfoV2], _response)  # type: ignore

    def get_latest_problem(self, *, problem_id: ProblemId) -> ProblemInfoV2:
        _response = requests.request("GET", "")
        return pydantic.parse_obj_as(ProblemInfoV2, _response)  # type: ignore

    def get_problem_version(self, *, problem_id: ProblemId, problem_version: int) -> ProblemInfoV2:
        _response = requests.request("GET", "")
        return pydantic.parse_obj_as(ProblemInfoV2, _response)  # type: ignore
