# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions

from .error_info import ErrorInfo
from .running_submission_state import RunningSubmissionState
from .submission_status_for_test_case import SubmissionStatusForTestCase


class TestSubmissionStatus_Stopped(pydantic.BaseModel):
    type: typing_extensions.Literal["stopped"]

    class Config:
        frozen = True
        smart_union = True


class TestSubmissionStatus_Errored(pydantic.BaseModel):
    type: typing_extensions.Literal["errored"]
    value: ErrorInfo

    class Config:
        frozen = True
        smart_union = True


class TestSubmissionStatus_Running(pydantic.BaseModel):
    type: typing_extensions.Literal["running"]
    value: RunningSubmissionState

    class Config:
        frozen = True
        smart_union = True


class TestSubmissionStatus_TestCaseIdToState(pydantic.BaseModel):
    type: typing_extensions.Literal["testCaseIdToState"]
    value: typing.Dict[str, SubmissionStatusForTestCase]

    class Config:
        frozen = True
        smart_union = True


TestSubmissionStatus = typing.Union[
    TestSubmissionStatus_Stopped,
    TestSubmissionStatus_Errored,
    TestSubmissionStatus_Running,
    TestSubmissionStatus_TestCaseIdToState,
]
