# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: /v1/users/{user_id}
  display-name: Cashflow API
  path-parameters:
    user_id: string
  endpoints:
    getFinancialHealth:
      path: /financial_health
      docs: This endpoint currently returns a list of fees including NSF and ATM fees, their counts and amounts. Our roadmap for this endpoint involves returning a range of insights such as anomalous or unusual transactions, risky transactions, trends in account activity and balances, and other types of bank fees.
      display-name: Get Financial Health
      method: GET
      request:
        name: GetFinancialHealthRequest
        query-parameters:
          start_date:
            type: date
            docs: The oldest transaction date on which the insights are to be computed, in YYYY-MM-DD format.
          end_date:
            type: date
            docs: The latest transaction date on which the insights are to be computed, in YYYY-MM-DD format.
          with_transactions:
            type: optional<boolean>
            docs: Boolean flag to include the transactions used for calculating the insights. Defaults to false.
      response: GetFinancialHealthResponse
      examples:
        - path-parameters:
            user_id: sandbox_default_user_001
          query-parameters:
            start_date: "2022-04-22"
            end_date: "2022-06-17"
            with_transactions: true
          response:
            body:
              user_id: sandbox_default_user_001
              from: "2022-04-22"
              to: "2022-06-17"
              top_level_summary: $TopLevelFinancialHealthSummary.Example1
              detailed_summary: [$DetailedFinancialHealthSummary.Example1]

    getRecurringExpenditures:
      path: /recurring_expenditures
      docs: Returns all of the recurring expenditures attached to a given user. Outputs both insights and an array of occurrences for each expenditure. Recurring expenditures are products and services that a user pays for on a recurring basis, with a due date. Includes bills, subscriptions and loan payments.
      display-name: Get Recurring Expenditures
      method: GET
      request:
        name: GetRecurringExpendituresRequest
        query-parameters:
          start_date:
            type: date
            docs: The oldest transaction date on which the insights are to be computed, in YYYY-MM-DD format.
          end_date:
            type: date
            docs: The latest transaction date on which the insights are to be computed, in YYYY-MM-DD format.
          with_transactions:
            type: boolean
            docs: Boolean flag to include the transactions used for calculating the insights. Defaults to false.
      response: GetRecurringExpendituresResponse
      examples:
        - path-parameters:
            user_id: sandbox_default_user_001
          query-parameters:
            start_date: "2022-06-03"
            end_date: "2022-07-01"
            with_transactions: true
          response:
            body:
              user_id: sandbox_default_user_001
              from: "2022-04-22"
              to: "2022-06-17"
              recurring_expenditures: [$RecurringExpenditure.Example1]

types:
  GetFinancialHealthResponse:
    properties:
      user_id:
        docs: The user ID for which the financial health was requested.
        type: string
      from:
        docs: The oldest transaction date on which the financial health was computed.
        type: date
      to:
        docs: The most recent transaction date on which the financial health was computed.
        type: date
      top_level_summary:
        docs: Short summary of fees grouped by tag.
        type: TopLevelFinancialHealthSummary
      detailed_summary:
        docs: Detailed summary of fees grouped by pave_name
        type: list<DetailedFinancialHealthSummary>

  GetRecurringExpendituresResponse:
    properties:
      user_id:
        docs: The user ID for which the recurring expenditures were requested.
        type: string
      from:
        docs: Oldest transaction date on which the insight was updated.
        type: date
      to:
        docs: Most recent transaction date on which the insight was updated.
        type: date
      recurring_expenditures:
        type: list<RecurringExpenditure>

  RecurringExpenditure:
    properties:
      normalized_merchant_name:
        docs: Merchant name cleaned and normalized by Pave.
        type: string
      merchant_uuid:
        docs: Unique identifier of the merchant for the given Recurring Expenditure.
        type: uuid
      logo:
        docs: A link to the merchant's logo. null if no logo is available.
        type: string
      last_amount:
        docs: Monetary value of the most recent occurrence of the expenditure.
        type: double
      last_description:
        docs: Description of the most recent transaction as provided by the data source.
        type: string
      last_date:
        docs: Date of the most recent occurence of the expenditure.
        type: date
      avg_amount:
        docs: Mean monetary value of the transactions for the recurring expenditure.
        type: double
      iso_currency_code:
        docs: ISO4217 currency code. For example USD, GBP, etc.
        type: string
      count:
        docs: Number of transactions in the given date range for the recurring expenditure.
        type: integer
      avg_period_days:
        docs: Mean number of days between occurrences of the recurring expenditure.
        type: integer
      normalized_frequency:
        docs: Normalized cadence of transactions for the recurring expenditure.
        type: NormalizedFrequency
      next_amount:
        docs: Predicted amount of the next occurrence of the recurring expenditure.
        type: double
      next_date:
        docs: Predicted date of the next occurrence of the recurring expenditure. In some cases, the next_date may be in the past as it is calculated by adding the avg_period_days to the most recent transaction date.
        type: date
      delta_amount:
        docs: "last_amount - previous_amount. For example: 68 indicates a $68 increase, -35 indicates a $35 decrease."
        type: double
      delta_percent:
        docs: "Percent change of previous_amount to last_amount. For example: .11 indicates an 11% increase, -.08 indicates an 8% decrease."
        type: double
      tags:
        docs: Tags that indicate the nature of the expenditure.
        type: list<ExpenditureTag>
      necessity_level:
        docs: Indicates level of necessity for a product or service.
        type: NecessityLevel
      transactions:
        docs: Array of occurrences for the recurring transaction.
        type: list<Transaction>
    examples:
      - name: Example1
        value:
          normalized_merchant_name: "QuadPay, Inc."
          merchant_uuid: fec0e59f-fbe4-4d7c-aa8f-6e4f6cde9236
          logo: "https://assets.pave.dev/merchants/logos/fec0e59f-fbe4-4d7c-aa8f-6e4f6cde9236.png"
          last_amount: 18.44
          last_description: "QUADPAY* QUADPAY ANY HTTPSWWW.QUAD NY 06/30"
          last_date: "2022-07-01"
          avg_amount: 28.8
          iso_currency_code: USD
          count: 5
          avg_period_days: 7
          normalized_frequency: weekly
          next_amount: 28.8
          next_date: 2022-07-08'
          delta_amount: 10.61
          delta_percent: 1.355
          tags: [Auto Loan BNPL, Loan]
          necessity_level: obligatory
          transactions: [$Transaction.Example2]

  NormalizedFrequency:
    enum:
      - daily
      - weekly
      - biweekly
      - semimonthly
      - monthly
      - bimonthly
      - quarterly
      - semi_annual
      - annual

  NecessityLevel:
    enum:
      - value: obligatory
        docs: Bills that are due and have consequences if they are not paid (eg. loan payments, utility payments, rent)
      - value: essential
        docs: Not a bill, but expenses that are vital to a personâ€™s livelihood (eg. groceries, gas)
      - value: nonessential
        docs: Any purchase that is optional (eg. restaurants, entertainment)

  TopLevelFinancialHealthSummary:
    properties:
      tag:
        docs: Tag of the grouped fees.
        type: FeeTag
      iso_currency_code:
        docs: ISO 4217 Compliant Currency code of the grouped fees.
        type: string
      total_amount:
        docs: Total amount of the grouped fees.
        type: double
      count:
        docs: Total number of grouped fee transactions.
        type: integer
    examples:
      - name: Example1
        value:
          tag: Fee
          iso_currency_code: USD
          total_amount: 149.98
          count: 16

  DetailedFinancialHealthSummary:
    properties:
      pave_uuid:
        docs: Unique identifier of the fee assigned by the Pave API.
        type: uuid
      pave_name:
        docs: Fee name assigned by the Pave API.
        type: string
      last_description:
        docs: The last transaction description given by the data source.
        type: string
      last_date:
        docs: Date of the last transaction.
        type: date
      last_amount:
        docs: Amount of the last transaction.
        type: double
      iso_currency_code:
        docs: ISO 4217 Compliant currency code.
        type: string
      count:
        docs: The number of times this fee has occurred.
        type: integer
      avg_amount:
        docs: Average amount of the fee.
        type: double
      total_amount:
        docs: Total amount of the fee.
        type: double
      transactions:
        docs: Array of individual transactions
        type: list<Transaction>
      tags:
        docs: List of grouped fee tags
        type: list<FeeTag>
    examples:
      - name: Example1
        value:
          pave_uuid: 61da13ab-437c-4877-8fa7-55438894c51c
          pave_name: ATM Fee
          last_description: NONTD ATM FEE
          last_date: "2022-06-14"
          last_amount: 3
          iso_currency_code: USD
          count: 7
          avg_amount: 3
          total_amount: 33
          tags: [ATM Fee]
          transactions: [$Transaction.Example1]

  Transaction:
    properties:
      pave_transaction_id:
        docs: Unique identifier of the transaction provided by Pave.
        type: string
      transaction_id:
        docs: Unique identifier of the transaction provided by the source.
        type: string
      name:
        docs: Name of the merchant for the transaction.
        type: string
      date:
        docs: Date for the transaction in YYYY-MM-DD format.
        type: date
      amount:
        docs: Amount of the transaction.
        type: double
      triggered_fee:
        docs: Type of fee triggered by the transaction.
        type: optional<FeeTag>
    examples:
      - name: Example1
        value:
          pave_transaction_id: f59e7dcc-5690-11ed-9b6a-0242ac120002
          transaction_id: 6800599d-8288-4092-826f-1ccbaabced28
          name: NONTD ATM FEE
          date: "2022-06-14"
          amount: 3
      - name: Example2
        value:
          pave_transaction_id: f59e7dcc-5690-11ed-9b6a-0242ac120002
          transaction_id: 6800599d-8288-4092-826f-1ccbaabced28
          name: "QUADPAY* QUADPAY ANY HTTPSWWW.QUAD NY 06/30"
          date: "2022-07-01"
          amount: 18.44
          triggered_fee: null

  FeeTag:
    enum:
      - name: ATM_Decline
        value: ATM Decline
      - name: ATM_Fee
        value: ATM Fee
      - name: Account_Service_Fee
        value: Account Service Fee
      - name: Credit_Card_Balance_Transfer_Fee
        value: Credit Card Balance Transfer Fee
      - name: Excessive_Withdrawal_Fee
        value: Excessive Withdrawal Fee
      - name: Fee
        value: Fee
      - name: Foreign_Exchange_Fee
        value: Foreign Exchange Fee
      - name: Money_Transfer_Fee
        value: Money Transfer Fee
      - name: NSF_Fee
        value: NSF Fee
      - name: Other_Bank_Fee
        value: Other Bank Fee
      - name: Overdraft_Fee
        value: Overdraft Fee
      - name: Refunded_ATM_Fee
        value: Refunded ATM Fee
      - name: Refunded_NSF_Fee
        value: Refunded NSF Fee
      - name: Refunded_Overdraft_Fee
        value: Refunded Overdraft Fee
      - name: Returned_Item
        value: Returned Item

  ExpenditureTag:
    enum:
      - name: Auto_Insurance
        value: Auto_Insurance
      - name: Auto_Loan_BNPL
        value: Auto Loan BNPL
      - name: Bill
        value: Bill
      - name: Cash_Advance
        value: Cash Advance
      - name: Child_Support
        value: Child Support
      - name: Credit_Builder
        value: Credit Builder
      - name: Credit_Card
        value: Credit Card
      - name: Credit_Card_Cash_Advance
        value: Credit Card Cash Advance
      - name: Debt_Collection
        value: Debt Collection
      - name: Education
        value: Education
      - name: Electric
        value: Electric
      - name: Gas
        value: Gas
      - name: Gym
        value: Gym
      - name: HOA_Fee
        value: HOA Fee
      - name: HR
        value: HR
      - name: Health
        value: Health
      - name: Health_Insurance
        value: Health Insurance
      - name: Insurance
        value: Insurance
      - name: Lease
        value: Lease
      - name: Lease_to_Own
        value: Lease to Own
      - name: Loan
        value: Loan
      - name: Mortgage
        value: Mortgage
      - name: Rent
        value: Rent
      - name: Renters_Insurance
        value: Renters Insurance
      - name: SaaS
        value: Saas
      - name: Streaming
        value: Streaming
      - name: Student_Loan
        value: Student Loan
      - name: Subscription
        value: Subscription
      - name: Tax
        value: Tax
      - Telecom
      - name: Title_Loan
        value: Title Loan
      - Utility
      - Waste
      - Water
