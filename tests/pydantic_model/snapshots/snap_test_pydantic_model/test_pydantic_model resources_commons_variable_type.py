# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions

from .list_type import ListType
from .map_type import MapType


class VariableType_IntegerType(pydantic.BaseModel):
    type: typing_extensions.Literal["integerType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_DoubleType(pydantic.BaseModel):
    type: typing_extensions.Literal["doubleType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_BooleanType(pydantic.BaseModel):
    type: typing_extensions.Literal["booleanType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_StringType(pydantic.BaseModel):
    type: typing_extensions.Literal["stringType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_CharType(pydantic.BaseModel):
    type: typing_extensions.Literal["charType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_ListType(ListType):
    type: typing_extensions.Literal["listType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_MapType(MapType):
    type: typing_extensions.Literal["mapType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_BinaryTreeType(pydantic.BaseModel):
    type: typing_extensions.Literal["binaryTreeType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_SinglyLinkedListType(pydantic.BaseModel):
    type: typing_extensions.Literal["singlyLinkedListType"]

    class Config:
        allow_population_by_field_name = True


class VariableType_DoublyLinkedListType(pydantic.BaseModel):
    type: typing_extensions.Literal["doublyLinkedListType"]

    class Config:
        allow_population_by_field_name = True


VariableType = typing_extensions.Annotated[
    typing.Union[
        VariableType_IntegerType,
        VariableType_DoubleType,
        VariableType_BooleanType,
        VariableType_StringType,
        VariableType_CharType,
        VariableType_ListType,
        VariableType_MapType,
        VariableType_BinaryTreeType,
        VariableType_SinglyLinkedListType,
        VariableType_DoublyLinkedListType,
    ],
    pydantic.Field(discriminator="type"),
]
VariableType_ListType.update_forward_refs(ListType=ListType, MapType=MapType, VariableType=VariableType)
VariableType_MapType.update_forward_refs(ListType=ListType, MapType=MapType, VariableType=VariableType)
