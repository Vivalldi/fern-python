# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions

from .error_info import ErrorInfo
from .running_submission_state import RunningSubmissionState
from .workspace_run_details import WorkspaceRunDetails
from .workspace_traced_update import WorkspaceTracedUpdate


class WorkspaceSubmissionUpdateInfo_Running(pydantic.BaseModel):
    type: typing_extensions.Literal["running"] = "running"
    value: RunningSubmissionState

    class Config:
        frozen = True


class WorkspaceSubmissionUpdateInfo_Ran(WorkspaceRunDetails):
    type: typing_extensions.Literal["ran"] = "ran"

    class Config:
        frozen = True


class WorkspaceSubmissionUpdateInfo_Stopped(pydantic.BaseModel):
    type: typing_extensions.Literal["stopped"] = "stopped"

    class Config:
        frozen = True


class WorkspaceSubmissionUpdateInfo_Traced(pydantic.BaseModel):
    type: typing_extensions.Literal["traced"] = "traced"

    class Config:
        frozen = True


class WorkspaceSubmissionUpdateInfo_TracedV2(WorkspaceTracedUpdate):
    type: typing_extensions.Literal["tracedV2"] = "tracedV2"

    class Config:
        frozen = True


class WorkspaceSubmissionUpdateInfo_Errored(pydantic.BaseModel):
    type: typing_extensions.Literal["errored"] = "errored"
    value: ErrorInfo

    class Config:
        frozen = True


class WorkspaceSubmissionUpdateInfo_Finished(pydantic.BaseModel):
    type: typing_extensions.Literal["finished"] = "finished"

    class Config:
        frozen = True


WorkspaceSubmissionUpdateInfo = typing_extensions.Annotated[
    typing.Union[
        WorkspaceSubmissionUpdateInfo_Running,
        WorkspaceSubmissionUpdateInfo_Ran,
        WorkspaceSubmissionUpdateInfo_Stopped,
        WorkspaceSubmissionUpdateInfo_Traced,
        WorkspaceSubmissionUpdateInfo_TracedV2,
        WorkspaceSubmissionUpdateInfo_Errored,
        WorkspaceSubmissionUpdateInfo_Finished,
    ],
    pydantic.Field(discriminator="type"),
]
