# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions

from ..commons.key_value_pair import KeyValuePair
from ..commons.map_value import MapValue
from ..commons.variable_value import VariableValue
from .test_case_hidden_grade import TestCaseHiddenGrade
from .test_case_non_hidden_grade import TestCaseNonHiddenGrade


class TestCaseGrade_Hidden(TestCaseHiddenGrade):
    type: typing_extensions.Literal["hidden"]

    class Config:
        allow_population_by_field_name = True


class TestCaseGrade_NonHidden(TestCaseNonHiddenGrade):
    type: typing_extensions.Literal["nonHidden"]

    class Config:
        allow_population_by_field_name = True


TestCaseGrade = typing_extensions.Annotated[
    typing.Union[TestCaseGrade_Hidden, TestCaseGrade_NonHidden], pydantic.Field(discriminator="type")
]
TestCaseGrade_NonHidden.update_forward_refs(KeyValuePair=KeyValuePair, MapValue=MapValue, VariableValue=VariableValue)
