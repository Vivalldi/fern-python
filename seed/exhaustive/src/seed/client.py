# This file was auto-generated by Fern from our API Definition.

import typing

import httpx

from .core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .resources.endpoints.client import AsyncEndpointsClient, EndpointsClient
from .resources.inlined_requests.client import AsyncInlinedRequestsClient, InlinedRequestsClient
from .resources.no_auth.client import AsyncNoAuthClient, NoAuthClient
from .resources.no_req_body.client import AsyncNoReqBodyClient, NoReqBodyClient
from .resources.req_with_headers.client import AsyncReqWithHeadersClient, ReqWithHeadersClient


class SeedExhaustive:
    def __init__(
        self,
        *,
        environment: str,
        token: typing.Optional[typing.Union[str, typing.Callable[[], str]]] = None,
        timeout: typing.Optional[float] = 60
    ):
        self._environment = environment
        self._client_wrapper = SyncClientWrapper(token=token, httpx_client=httpx.Client(timeout=timeout))
        self.endpoints = EndpointsClient(environment=environment, client_wrapper=self._client_wrapper)
        self.inlined_requests = InlinedRequestsClient(environment=environment, client_wrapper=self._client_wrapper)
        self.no_auth = NoAuthClient(environment=environment, client_wrapper=self._client_wrapper)
        self.no_req_body = NoReqBodyClient(environment=environment, client_wrapper=self._client_wrapper)
        self.req_with_headers = ReqWithHeadersClient(environment=environment, client_wrapper=self._client_wrapper)


class AsyncSeedExhaustive:
    def __init__(
        self,
        *,
        environment: str,
        token: typing.Optional[typing.Union[str, typing.Callable[[], str]]] = None,
        timeout: typing.Optional[float] = 60
    ):
        self._environment = environment
        self._client_wrapper = AsyncClientWrapper(token=token, httpx_client=httpx.AsyncClient(timeout=timeout))
        self.endpoints = AsyncEndpointsClient(environment=environment, client_wrapper=self._client_wrapper)
        self.inlined_requests = AsyncInlinedRequestsClient(environment=environment, client_wrapper=self._client_wrapper)
        self.no_auth = AsyncNoAuthClient(environment=environment, client_wrapper=self._client_wrapper)
        self.no_req_body = AsyncNoReqBodyClient(environment=environment, client_wrapper=self._client_wrapper)
        self.req_with_headers = AsyncReqWithHeadersClient(environment=environment, client_wrapper=self._client_wrapper)
