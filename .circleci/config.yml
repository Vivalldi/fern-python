version: 2.1

orbs:
  python: circleci/python@2.1.1

jobs:

  seed-test:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
#      - python/install-packages:
#          pkg-manager: poetry
#      - setup_remote_docker:
#          version: default
      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-venv

      # Install Poetry
      - run:
          name: Install Poetry
          command: |
            curl -sSL https://install.python-poetry.org | python3 -
            source $HOME/.poetry/env
      - run: |
          docker buildx create --driver docker-container --bootstrap --use
          docker buildx build -o type=docker -f ./docker/sdk/Dockerfile -t fernapi/fern-python-sdk:latest .
          npm uninstall @fern-api/seed-cli
          sudo npm install -g @fern-api/seed-cli@0.14.3-4-g9dd53050
          seed test --docker fernapi/fern-python-sdk:latest --irVersion v20 --language python --compile-command 'poetry install && poetry run mypy .' --fixture exhaustive
          git --no-pager diff --exit-code

  check:
    docker:
      - image: cimg/python:3.8.16-node
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Type check
          command: poetry run mypy
      - run:
          name: pre-commit
          command: poetry run pre-commit run --all-files

  test:
    docker:
      - image: cimg/python:3.8.16-node
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run tests
          command: poetry run pytest -sv

  publish-dockers:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run:
          name: Setup Buildx
          command: |
            docker buildx create --name multiplatform --driver docker-container --bootstrap --use
      - run:
          name: Publish Pydantic Docker
          command: |
            projectVersion=$(./scripts/git-version.sh)
            echo "$FERNAPI_DOCKER_HUB_PASSWORD" | docker login --username fernapi --password-stdin
            docker buildx build --platform linux/amd64,linux/arm64 -f ./docker/pydantic-model/Dockerfile -t fernapi/fern-pydantic-model:${projectVersion} . --push
      - run:
          name: Publish FastAPI Docker
          command: |
            projectVersion=$(./scripts/git-version.sh)
            echo "$FERNAPI_DOCKER_HUB_PASSWORD" | docker login --username fernapi --password-stdin
            docker buildx build --platform linux/amd64,linux/arm64 -f ./docker/fastapi/Dockerfile -t fernapi/fern-fastapi-server:${projectVersion} . --push
      - run:
          name: Publish SDK Docker
          command: |
            projectVersion=$(./scripts/git-version.sh)
            echo "$FERNAPI_DOCKER_HUB_PASSWORD" | docker login --username fernapi --password-stdin
            docker buildx build --platform linux/amd64,linux/arm64 -f ./docker/sdk/Dockerfile -t fernapi/fern-python-sdk:${projectVersion} . --push



workflows:
  build:
    jobs:
      - seed-test:
          filters:
            tags:
              only: /.*/
      - check:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - publish-dockers:
          filters:
            branches:
              only: main
            tags:
              only:
                - /.*/
          requires:
            - check
            - test
          context:
            - docker-hub
